version: '3.8'

services:
  # -----------------------------
  # ZOOKEEPER
  # -----------------------------
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"

  # -----------------------------
  # KAFKA BROKER
  # -----------------------------
  kafka:
    image: wurstmeister/kafka:2.13-2.8.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "transaction-topic:1:1"
    depends_on:
      - zookeeper

  # -----------------------------
  # MYSQL DATABASE
  # -----------------------------
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: banking_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # -----------------------------
  # REDIS CACHE
  # -----------------------------
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  # -----------------------------
  # TRANSACTION SERVICE (Producer)
  # -----------------------------
  transaction-service:
    build: ./transaction-service
    container_name: transaction-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/banking_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - kafka
      - mysql
      - redis

  # -----------------------------
  # NOTIFICATION SERVICE (Consumer)
  # -----------------------------
  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8083:8083"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

volumes:
  mysql_data:
